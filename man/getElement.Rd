\name{getElement}
\alias{getElement}
\alias{getVector}
\title{Functions to extract atomic data types (numeric, character)
  and vectors from an XML tree}
\description{Functions to extract atomic data types (numeric, character)
  and vectors from an XML tree that
  was generated by Urban Liebel's Labview image analysis  program}
\usage{
  getElement(node, name, type="numeric")
  getVector(node, name, elementnames, elementtypes)
}
\arguments{
  \item{node}{XMLNode. A node of an XML tree}
  \item{name}{character. The expected name of the node. Maybe NULL for
    \code{getVector}, is mandatory for \code{getElement}. If
    \code{xmlName(node)} is not the same as \code{name}, an error
    message is generated.}
  \item{type}{Character. Should be either \code{numeric} or
    \code{character}.}
  \item{elementnames}{list. The list may be nested, thus describing a
    tree. This tree must correspond to the XML subtree starting at
    \code{node}. The leaves of \code{elementnames} should be of class
    \code{character} and contain the names of the leave nodes of the XML
    subtree.}
  \item{elementtypes}{list. Same form as \code{elementnames}. The leaves
    of \code{elementtypes} should be of class \code{character} and
    contain the types of the leave nodes of the XML subtree.}
}

\details{\code{getVector} descends into the XML subtree starting at
  \code{node} recursively. The atomic elements of the nested lists
  \code{elementnames} and \code{elementtypes} are used as the arguments
  \code{name} and \code{type} of the call to
  \code{getElement} for the corresponding leave nodes.}
}

\value{
  A flat list (the result of \code{unlist}) with the values from the XML
  subtree and names \code{unlist(elementnames)}.
}

\author{Wolfgang Huber \url{http://www.dkfz.de/abt0840/whuber}}
\seealso{}
\examples{ 
  exfile = file.path(.path.package("prada"), "data", "dorit13_2c-1-2--13-Ytrail=3143937171.xml")
  z      = xmlTreeParse(exfile)
  r      = xmlRoot(z)[[2]]
  getElement(r[[3]], name="current clone", type="character")

  thenames = list("Area (pixels)", "Perimeter", "Projection x", "Projection y",
      "Longest Segment Length",
      list("x1Left", "y1Top", "x2Right", "y2Bottom"),
      "Number of Holes", "Hole's Area (pixels)", "Dapi mean",
      "Brdu mean", "transfection mean")
  thetypes = c(rep("numeric", 5), list(rep("numeric", 4)), rep("numeric", 5))

  getVector(r[[4]][[6]], name=NULL, elementnames=thenames, elementtypes=thetypes)
  getElement(r[[4]][[6]][[3]], "Area (pixels)")
}

\keyword{programming}
\keyword{error}
